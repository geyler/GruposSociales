import Head from "next/head";
import Footer from "../../componentes/footer";
import Header from "../../componentes/header";
import { getSession } from 'next-auth/react'
import { useRouter } from 'next/router'
import { useEffect, useState } from "react";
import Link from "next/link";
import axios from "axios";
import Buscador from "componentes/buscador";

export default function Homex(props) {
  const router = useRouter()
  const post = props.posts;

  const [condiciones, setCondiciones] = useState(false)
  useEffect(()=>{
    setCondiciones(false)
  },[])
  const aceptadas = () => {
    if(condiciones){
      setCondiciones(false)
    }else{
      setCondiciones(true)
    }
  }
  const eliminar = async () => {
    try {
      const res = await axios.put(
        `/api/grupos/eliminar`,
        { _id: props.posts._id }
      );
      console.log(res.data.deletedCount)
      if(!res.data.deletedCount){
        router.push('/admin')
      }
      return res;
    } catch (error) {
      console.log(error)
      return {
        notFound: true,
      };
    }
  }

  return (
    <div className="contenedor">
      <Head>
        <title>Inicio</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="app">
        <Header perfil={props.session ? props.session.user : ''}/>
        <main className="main gruposimple">
        <div className="text-informacion-footer">
        <Buscador/>
        </div>
          <div className="contendor posts">
            <div className="contenedor-tipo-de-grupo"><span><Link href={`/?r=${post?.red}`}><a className="">Grupo de {post?.red}</a></Link></span></div>
            <h1 className="titulo-del-grupo">{post?.titulo}</h1>

            <div className="ads-espacio"></div>

            <div className="categoria-vistas-contenedor">
              <div className="categoria"><span>Categoria: <Link href={`/?q=${post?.categoria}`}><a className="link-categoria">{post?.categoria}</a></Link></span></div>
              <div className="vistas"><span>Vistas: <div className="contador-vistas">{post?.vistas}</div></span></div>
            </div>

            <div className="ads-espacio"></div>

            <div className="id-unico-grupo"><span>ID del Grupo: {post?._id}</span></div>

            <div className="contenedor-link">
              <div className="contenedor-alerta-terminos">
                <label className="label-condiciones"><input type="checkbox" onChange={aceptadas} value={condiciones}/> 
                He leído y acepto las 
                <Link href='/p/terminos-y-condiciones'><a className="condiciones-link"> condiciones de uso</a></Link> y la 
                <Link href='/p/politica-de-privacidad'><a className="privacidad-link"> privacidad.</a></Link></label>
              </div>
              {
                condiciones ? (
                <Link href={post?.link}><a className="link-al-grupo" target='_blank'>Unirse al Grupo</a></Link>
                ) : (
                <Link href='#'><a className="link-al-grupo desabilitado">Unirse al Grupo</a></Link> 
                )
              }
              <small><b>Importante</b><br/>
                        - No compartas información personal en el grupo<br/>
                        - El grupo está administrado por un particular que no conocemos y tu tampoco. <br/>
                        - Sé prudente.<br/>
                        - Al unirte al grupo saldrás de esta web.</small>
            </div>
            {props.esCreador ? (<div className="btns-admin">
              <Link href={`/${post?._id}/editar`}><a className="btns-admin-editar">Editar el Grupo</a></Link>
              <div className="btns-admin-eliminar" onClick={eliminar}>Eliminar</div>
            </div>) : ''}
          </div>
        </main>
        <Footer />
      </div>
    </div>
  );
}

export const getServerSideProps = async (context) => {
  try {
    const {data} = await axios.get(`${process.env.PAGE_URL}/api/grupos/${context.query.id}`);
    const session = await getSession(context)
    var esCreador = false;
    if(session?.user?.email === data.creador){
      var esCreador = true;
    }
    if(session?.user?.email === 'geylerps@gmail.com'){
      var esCreador = true;
    }

    return {
      props: {
        posts: data,
        session,
        esCreador
      },
    };
  } catch (error) {
    console.log(error)
    return {
      notFound: true,
    };
  }
};
